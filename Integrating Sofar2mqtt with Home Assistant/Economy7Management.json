[{"id":"7895cc5729aa0d4b","type":"tab","label":"Economy 7 Management","disabled":false,"info":"","env":[]},{"id":"8b4519f06359bdd6","type":"mqtt in","z":"7895cc5729aa0d4b","name":"Sofar2mqtt","topic":"Sofar2mqtt/state","qos":"2","datatype":"auto-detect","broker":"3348075e0f83efab","nl":false,"rap":true,"rh":0,"inputs":0,"x":120,"y":200,"wires":[["1dfc0fc78bbdb355"]]},{"id":"1dfc0fc78bbdb355","type":"function","z":"7895cc5729aa0d4b","name":"Format","func":"var blnError = false;\nvar runningState = \"\";\nvar batterySOC = 0;\nvar triggerMQTT = \"\";\n\n\nif (!blnError) {\n    switch (msg.payload.running_state) {\n        case 0:\n            runningState = \"Standby\"\n            break;\n        case 1:\n            runningState = \"Check charge\"\n            break;\n        case 2:\n            runningState = \"Charging\"\n            break;\n        case 3:\n            runningState = \"Check discharge\"\n            break;\n        case 4:\n            runningState = \"Discharging\"\n            break;\n        case 5:\n            runningState = \"EPSState\"\n            break;\n        case 6:\n            runningState = \"Fault\"\n            break;\n        case 7:\n            runningState = \"Permanent Fault\"\n            break;\n        default:\n            runningState = \"Unknown\"\n            break;\n    }\n}\n\n\nif (!blnError) {\n    // batterySOC\n    blnError = isNaN(msg.payload.batterySOC);\n    if (!blnError) {\n        batterySOC = parseInt(msg.payload.batterySOC);\n        blnError = (batterySOC > 100);\n    }\n    if (!blnError) {\n        // SOFAR doesn't seem to report more than 99%\n        // So if idle and 99%, assume 100%\n        if (batterySOC == 99 && runningState == \"Standby\") {\n            batterySOC = 100;\n        }\n    }\n}\n\nif (!blnError) {\n    var currentDateTime = new Date();\n    var currentTime = new Date(0, 0, 0, currentDateTime.getHours(), currentDateTime.getMinutes(), currentDateTime.getSeconds(), 0);\n    \n    // Enter start and end times here\n    // The parameters are\n    // year, month, day, hour, minute, second, millisecond.\n    // Configured below is 00:35 start and 07:25 end.\n    // If you use another TOU tariff like Octopus Go\n    // You may want to use 0, 35 and 4, 25 respectively.\n    var economy7StartTime = new Date(0, 0, 0, 0, 35, 0, 0);\n    var economy7EndTime = new Date(0, 0, 0, 7, 25, 0, 0);\n    if (economy7EndTime <= economy7StartTime)\n    {\n        economy7EndTime.setHours(economy7EndTime.getHours() + 24);\n    }\n\n    var economy7EndTimePlusToleranace = new Date(economy7EndTime.getTime());\n    economy7EndTimePlusToleranace.setMinutes(economy7EndTimePlusToleranace.getMinutes() + 2);\n\n\n/*\n    console.log(currentTime);\n    console.log(economy7StartTime);\n    console.log(economy7EndTime);\n    console.log(economy7EndTimePlusFiveMinutes);\n*/\n\n    if (currentTime >= economy7StartTime && currentTime <= economy7EndTime)\n    {\n        //console.log(\"Within E7\");\n        if (batterySOC == 100 && runningState != \"Standby\")\n        {\n            triggerMQTT = \"Standby\";\n        }\n        else if (batterySOC < 100 && runningState != \"Charging\")\n        {\n            triggerMQTT = \"Charge\";\n        }\n    }\n    else if (currentTime > economy7EndTime && currentTime <= economy7EndTimePlusToleranace)\n    {\n        //console.log(\"Within E7 Tolerance\");\n        triggerMQTT = \"Auto\";\n    }\n    else\n    {\n        //console.log(\"Outside E7\");\n        // Do nothing\n    }\n\n\n}\n\n\nmsg.payload = triggerMQTT;\n\n\nif (!blnError) {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"\" })\n    setTimeout(() => { node.status({}); }, 3000);\n    return msg;\n}\nelse {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"\" })\n    setTimeout(() => { node.status({}); }, 3000);\n    msg = null;\n    throw new Error('Spurious Data');\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":200,"wires":[["9787a854f98cee32","92bc7545b886773e"]]},{"id":"9787a854f98cee32","type":"debug","z":"7895cc5729aa0d4b","name":"Raw Output","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":510,"y":160,"wires":[]},{"id":"92bc7545b886773e","type":"switch","z":"7895cc5729aa0d4b","name":"What To Do","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Auto","vt":"str"},{"t":"eq","v":"Charge","vt":"str"},{"t":"eq","v":"Standby","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":510,"y":220,"wires":[["b2bffd34b476c682","6a97de8929610e73"],["d61e8fefbd757dcb","b276272207bfca2a"],["a0df11feb2c083a5","a06ec95e472542ec"]],"info":"1 = Auto\r\n2 = Charge\r\n3 = Standby"},{"id":"b2bffd34b476c682","type":"debug","z":"7895cc5729aa0d4b","name":"Auto","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":710,"y":140,"wires":[]},{"id":"d61e8fefbd757dcb","type":"debug","z":"7895cc5729aa0d4b","name":"Charge","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":720,"y":220,"wires":[]},{"id":"a0df11feb2c083a5","type":"debug","z":"7895cc5729aa0d4b","name":"Standby","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":720,"y":300,"wires":[]},{"id":"1fbffb3d14eeb06f","type":"mqtt out","z":"7895cc5729aa0d4b","name":"Set Auto Mode","topic":"Sofar2mqtt/set/auto","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"3348075e0f83efab","x":1000,"y":140,"wires":[]},{"id":"678b4ca4f86ac6cd","type":"mqtt out","z":"7895cc5729aa0d4b","name":"Set Charge Mode","topic":"Sofar2mqtt/set/charge","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"3348075e0f83efab","x":1010,"y":240,"wires":[]},{"id":"176305b5829ad95c","type":"mqtt out","z":"7895cc5729aa0d4b","name":"Set Standby Mode","topic":"Sofar2mqtt/set/standby","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"3348075e0f83efab","x":1010,"y":340,"wires":[]},{"id":"6a97de8929610e73","type":"change","z":"7895cc5729aa0d4b","name":"Set payload to 'auto'","rules":[{"t":"set","p":"payload","pt":"msg","to":"auto","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":760,"y":180,"wires":[["1fbffb3d14eeb06f","ad0905c751ad2611"]]},{"id":"b276272207bfca2a","type":"change","z":"7895cc5729aa0d4b","name":"Set payload charge rate","rules":[{"t":"set","p":"payload","pt":"msg","to":"2000","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":260,"wires":[["678b4ca4f86ac6cd","c0781b4b3ecf8a34"]]},{"id":"a06ec95e472542ec","type":"change","z":"7895cc5729aa0d4b","name":"Set payload to 'true'","rules":[{"t":"set","p":"payload","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":750,"y":340,"wires":[["176305b5829ad95c","da772b2d9a56e821"]]},{"id":"c0781b4b3ecf8a34","type":"debug","z":"7895cc5729aa0d4b","name":"Charge Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1000,"y":300,"wires":[]},{"id":"ad0905c751ad2611","type":"debug","z":"7895cc5729aa0d4b","name":"Auto Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":990,"y":200,"wires":[]},{"id":"da772b2d9a56e821","type":"debug","z":"7895cc5729aa0d4b","name":"Standby Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1010,"y":400,"wires":[]},{"id":"3348075e0f83efab","type":"mqtt-broker","name":"Home Assistant Mosquitto","broker":"localhost","port":"1883","clientid":"HAClient","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""}]